[tool.commitizen]
version = "3.12.0"
tag_format = "v$version"
version_files = [
  "pyproject.toml:version",
  "commitizen/__version__.py",
  ".pre-commit-config.yaml:rev:.+Commitizen",
]

[tool.poetry]
name = "commitizen"
version = "3.12.0"
description = "Python commitizen client tool"
authors = ["Santiago Fraire <santiwilly@gmail.com>"]
license = "MIT"
keywords = ["commitizen", "conventional", "commits", "git"]
readme = "docs/README.md"
homepage = "https://github.com/commitizen-tools/commitizen"
# See also: https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
]

[tool.poetry.dependencies]
python = ">=3.8"
questionary = "^2.0"
decli = "^0.6.0"
colorama = "^0.4.1"
termcolor = ">= 1.1, < 3"
packaging = ">=19"
tomlkit = ">=0.5.3,<1.0.0"
jinja2 = ">=2.10.3"
pyyaml = ">=3.08"
argcomplete = ">=1.12.1,<3.2"
typing-extensions = { version = "^4.0.1", python = "<3.8" }
charset-normalizer = ">=2.1.0,<4"
# Use the Python 3.11 and 3.12 compatible API: https://github.com/python/importlib_metadata#compatibility
importlib_metadata = { version = ">=4.13,<7"}

[tool.poetry.group.dev.dependencies]
ipython = "^8.0"
# test
pytest = "^7.2.0"
pytest-cov = "^4.0"
pytest-mock = "^3.10"
pytest-regressions = "^2.4.0"
pytest-freezer = "^0.4.6"
pytest-xdist = "^3.1.0"
# code formatter
black = ">=22.10,<24.0"
# linter
ruff = ">=0.0.275,<0.0.293"
pre-commit = ">=2.18,<4.0"
mypy = "^1.4"
types-PyYAML = ">=5.4.3,<7.0.0"
types-termcolor = "^0.1.1"
# documentation
mkdocs = "^1.4.2"
mkdocs-material = "^9.1.6"
deprecated = "^1.2.13"
types-deprecated = "^1.2.9.2"
types-python-dateutil = "^2.8.19.13"


[tool.poetry.scripts]
cz = "commitizen.cli:main"
git-cz = "commitizen.cli:main"

[tool.poetry.plugins."commitizen.plugin"]
cz_conventional_commits = "commitizen.cz.conventional_commits:ConventionalCommitsCz"
cz_jira = "commitizen.cz.jira:JiraSmartCz"
cz_customize = "commitizen.cz.customize:CustomizeCommitsCz"

[tool.poetry.plugins."commitizen.changelog_format"]
markdown = "commitizen.changelog_formats.markdown:Markdown"
asciidoc = "commitizen.changelog_formats.asciidoc:AsciiDoc"
textile = "commitizen.changelog_formats.textile:Textile"
restructuredtext = "commitizen.changelog_formats.restructuredtext:RestructuredText"

[tool.poetry.plugins."commitizen.provider"]
cargo = "commitizen.providers:CargoProvider"
commitizen = "commitizen.providers:CommitizenProvider"
composer = "commitizen.providers:ComposerProvider"
npm = "commitizen.providers:NpmProvider"
pep621 = "commitizen.providers:Pep621Provider"
poetry = "commitizen.providers:PoetryProvider"
scm = "commitizen.providers:ScmProvider"

[tool.poetry.plugins."commitizen.scheme"]
pep440 = "commitizen.version_schemes:Pep440"
semver = "commitizen.version_schemes:SemVer"

[tool.coverage]
    [tool.coverage.report]
    show_missing = true
    exclude_lines = [
        # Have to re-enable the standard pragma
        'pragma: no cover',

        # Don't complain about missing debug-only code:
        'def __repr__',
        'if self\.debug',

        # Don't complain if tests don't hit defensive assertion code:
        'raise AssertionError',
        'raise NotImplementedError',

        # Don't complain if non-runnable code isn't run:
        'if 0:',
        'if __name__ == .__main__.:',
        'if TYPE_CHECKING:',
    ]
    omit = [
        'env/*',
        'venv/*',
        '.venv/*',
        '*/virtualenv/*',
        '*/virtualenvs/*',
        '*/tests/*',
    ]

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = "--strict-markers"

[tool.ruff]
line-length = 88
select = ["E", "F", "UP"]
ignore = [
    "E501",
    "D1",
    "D415"
]

[tool.ruff.isort]
known-first-party = ["commitizen", "tests"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.mypy]
files = "commitizen"
disallow_untyped_decorators = true
disallow_subclassing_any = true
warn_return_any = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = "py.*"  # Legacy pytest dependencies
ignore_missing_imports = true
