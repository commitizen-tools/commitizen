[tool.commitizen]
name = "cz_customize"
version = "0.1.0"
version_files = [
    "src/__version__.py",
    "pyproject.toml:version"
]
style = [
    ["qmark", "fg:#ff9d00 bold"],
    ["question", "bold"],
    ["answer", "fg:#ff9d00 bold"],
    ["pointer", "fg:#ff9d00 bold"],
    ["highlighted", "fg:#ff9d00 bold"],
    ["selected", "fg:#cc5454"],
    ["separator", "fg:#cc5454"],
    ["instruction", ""],
    ["text", "fg:#ffffff"],
    ["disabled", "fg:#858585 italic"]
]

#(major|breaking|minor|feature|fix|patch)

[tool.commitizen.customize]
message_template = "{{title}}\n\n{{description}}\n\n+ref: {{ticket_ref}}\n+semver: {{change_type}}\n{% if is_breaking_change %}\nBREAKING CHANGE: {{footer}}{% endif %}"
example = "feature: this feature enable customize through config file"
schema = "<type>: <body>"
schema_pattern = "(feature|bug fix):(\\s.*)"
#bump_pattern = "^(major|breaking|minor|feature|fix|patch)"
#bump_map = {"major" = "MAJOR", "breaking" = "MAJOR", "new" = "MINOR", "fix" = "PATCH", "hotfix" = "PATCH"}
change_type_order = ["BREAKING CHANGE", "feat", "fix", "refactor", "perf"]
info_path = "cz_customize_info.txt"
info = """
This is customized info
"""
commit_parser = "^(?P<change_type>feature|bug fix):\\s(?P<message>.*)?"
changelog_pattern = "^(feature|bug fix)?(!)?"
change_type_map = {"feature" = "Feat", "bug fix" = "Fix"}

[[tool.commitizen.customize.questions]]
type = "list"
name = "change_type"
choices = [
    "major",
    "breaking",
    "minor",
    "feature",
    "fix",
    "patch",
]

message = "Select the type of change you are committing"

[[tool.commitizen.customize.questions]]
type = "input"
name = "ticket_ref"
message = "Enter a ticket reference (Enter to skip):"

[[tool.commitizen.customize.questions]]
type = "input"
name = "title"
message = "Enter a descriptive title:"

[[tool.commitizen.customize.questions]]
type = "input"
name = "description"
message = "Enter a description:"